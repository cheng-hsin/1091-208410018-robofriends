{"version":3,"sources":["robots.js","Card.js","CardList.js","SearchBox.js","App.js","index.js"],"names":["robots","id","name","username","email","Card","className","src","alt","CardList","map","user","i","key","SearchBox","searchChange","type","placeholder","onChange","App","onSearchChange","event","setState","searchField","target","value","state","robot","filteredRobots","this","filter","toLowerCase","includes","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAEaA,EAAS,CACpB,CACEC,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,2BCjDIC,EAVF,SAAC,GAAyB,IAAvBJ,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAME,EAAY,EAAZA,MACtB,OACI,yBAAKE,UAAU,oDACX,yBAAKC,IAAG,+BAA0BN,EAA1B,iBAA6CO,IAAI,UACzD,4BAAKN,GACL,2BAAIE,KCeDK,EAnBE,SAAC,GAAgB,IAAdT,EAAa,EAAbA,OAChB,OACI,6BACKA,EAAOU,KAAI,SAACC,EAAMC,GACf,OACI,kBAAC,EAAD,CACIC,IAAKD,EACLX,GAAIU,EAAKV,GACTC,KAAMS,EAAKT,KACXE,MAAOO,EAAKP,aCErBU,EAZG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,yBAAKT,UAAU,OACX,2BAAOA,UAAU,mCACbU,KAAK,SACLC,YAAY,gBACZC,SAAUH,MC2BXI,E,kDA7Bb,aAAe,IAAD,8BACZ,gBAOFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAP1C,EAAKC,MAAQ,CACXC,MAAO3B,EACPuB,YAAa,IAJH,E,qDAYJ,IAAD,OACDK,EAAiBC,KAAKH,MAAMC,MAAMG,QAAO,SAACH,GAC9C,OAAOA,EAAMzB,KACV6B,cACAC,SAAS,EAAKN,MAAMH,YAAYQ,kBAErC,OACE,yBAAKzB,UAAU,MACb,2CACA,kBAAC,EAAD,CAAWS,aAAcc,KAAKT,iBAC9B,kBAAC,EAAD,CAAUpB,OAAQ4B,IAHpB,gH,GApBYK,a,MCGlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,6BACE,kBAAC,EAAD,QAIJC,SAASC,eAAe,U","file":"static/js/main.8b85f5fe.chunk.js","sourcesContent":["// robots.js\r\n\r\nexport const robots = [\r\n  {\r\n    id: 1,\r\n    name: 'Leanne Graham',\r\n    username: 'Bret',\r\n    email: 'Sincere@april.biz',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Ervin Howell',\r\n    username: 'Antonette',\r\n    email: 'Shanna@melissa.tv',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Clementine Bauch',\r\n    username: 'Samantha',\r\n    email: 'Nathan@yesenia.net',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Patricia Lebsack',\r\n    username: 'Karianne',\r\n    email: 'Julianne.OConner@kory.org',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Chelsey Dietrich',\r\n    username: 'Kamren',\r\n    email: 'Lucio_Hettinger@annie.ca',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'Mrs. Dennis Schulist',\r\n    username: 'Leopoldo_Corkery',\r\n    email: 'Karley_Dach@jasper.info',\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'Kurtis Weissnat',\r\n    username: 'Elwyn.Skiles',\r\n    email: 'Telly.Hoeger@billy.biz',\r\n  },\r\n  {\r\n    id: 8,\r\n    name: 'Nicholas Runolfsdottir V',\r\n    username: 'Maxime_Nienow',\r\n    email: 'Sherwood@rosamond.me',\r\n  },\r\n  {\r\n    id: 9,\r\n    name: 'Glenna Reichert',\r\n    username: 'Delphine',\r\n    email: 'Chaim_McDermott@dana.io',\r\n  },\r\n  {\r\n    id: 10,\r\n    name: 'Clementina DuBuque',\r\n    username: 'Moriah.Stanton',\r\n    email: 'Rey.Padberg@karina.biz',\r\n  },\r\n];\r\n","import React from 'react'\r\n\r\nconst Card = ({ id, name, email }) => {\r\n    return (\r\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img src={`https://robohash.org/${id}?size=200x200`} alt=\"robot\" />\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react'\r\nimport Card from './Card'\r\n\r\nconst CardList = ({ robots }) => {\r\n    return (\r\n        <div>\r\n            {robots.map((user, i) => {\r\n                return (\r\n                    <Card\r\n                        key={i}\r\n                        id={user.id}\r\n                        name={user.name}\r\n                        email={user.email}\r\n                    />\r\n                )\r\n            })\r\n\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList\r\n\r\n","import React from 'react'\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input className='pa3 ba b--green bg-lightest-blue'\r\n                type=\"search\"\r\n                placeholder='search rebots'\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import React, { Component } from 'react';\r\nimport { robots } from './robots';\r\nimport CardList from './CardList';\r\nimport SearchBox from './SearchBox';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robot: robots,\r\n      searchField: '',//搜尋欄的預設值\r\n    };\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchField: event.target.value });//搜尋欄的值改成當下輸入的值\r\n  };\r\n\r\n  render() {\r\n    const filteredRobots = this.state.robot.filter((robot) => {\r\n      return robot.name\r\n        .toLowerCase()\r\n        .includes(this.state.searchField.toLowerCase());//讓filtereddemos的值=搜尋欄輸入的值，篩選有包含在name裡面的值\r\n    });\r\n    return (\r\n      <div className='tc'>\r\n        <h1>RoboFriends</h1>\r\n        <SearchBox searchChange={this.onSearchChange} />\r\n        <CardList robots={filteredRobots} />//先在App.js篩選robots再傳回CardList\r\n        //robots會=篩選過的\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <div>\n      <App />\n    </div>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}